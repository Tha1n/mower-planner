# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build Mower-Planner application and deploy it to production

on:
  push:
    tags:
    - '*'


jobs:
  build-app:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Use Node.js 16.x
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
        cache: "npm"
    - name: Build and test app
      uses: ./.github/actions/build-node

  build-image:
    runs-on: ubuntu-latest
    needs: build-app
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Get app version from package.json
      id: package-version
      uses: martinbeentjes/npm-get-version-action@master
    - name: 'Authenticate to Google Cloud'
      id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        workload_identity_provider: ${{ secrets.GCLOUD_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.GCLOUD_SVC_ACCOUNT }}
    - name: Build the Docker image and push to Artefact Registry
      env:
        APP_VERSION: ${{ steps.package-version.outputs.current-version }}
      run: |
        gcloud auth configure-docker ${{ env.REGISTRY_LOCALE }}
        docker build . --tag ${{ env.APP_NAME }}:${{ env.APP_VERSION }}
        docker tag ${{ env.APP_NAME }}:${{ env.APP_VERSION }} ${{ env.REGISTRY_PATH }}/${{ env.APP_NAME }}:${{ env.APP_VERSION }}-${GITHUB_SHA::7}
        docker tag ${{ env.APP_NAME }}:${{ env.APP_VERSION }} ${{ env.REGISTRY_PATH }}/${{ env.APP_NAME }}:latest
        docker push ${{ env.REGISTRY_PATH }}/${{ env.APP_NAME }}:${{ env.APP_VERSION }}-${GITHUB_SHA::7}
        docker push ${{ env.REGISTRY_PATH }}/${{ env.APP_NAME }}:latest

  # TODO: Fix it later. Uneeded but fun functionality
  # package-chart:
  #   runs-on: ubuntu-latest
  #   needs: build-app
  #   permissions:
  #     contents: 'read'
  #     id-token: 'write'
  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v3
  #   - name: 'Authenticate to Google Cloud'
  #     id: 'auth'
  #     uses: 'google-github-actions/auth@v0'
  #     with:
  #       workload_identity_provider: ${{ secrets.GCLOUD_WORKLOAD_IDENTITY_PROVIDER }}
  #       service_account: ${{ secrets.GCLOUD_SVC_ACCOUNT }}
  #       token_format: 'access_token'
  #   - name: Package helm chart
  #     run: helm package ./helm
  #   - name: Configure gcloud
  #     run: gcloud auth configure-docker ${{ env.REGISTRY_LOCALE }}
  #   - name: Pushing Helm package to Artefact Registry
  #     run: |
  #       helm version
  #       helm push {{ env.APP_NAME }}-0.1.0.tgz "oci://{{ env.REGISTRY_PATH }}" --kube-token ${{ steps.auth.outputs.access_token }} --debug

  deploy:
  runs-on: ubuntu-latest
    needs: build-image
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: 'Authenticate to Google Cloud'
      id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        workload_identity_provider: ${{ secrets.GCLOUD_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.GCLOUD_SVC_ACCOUNT }}
