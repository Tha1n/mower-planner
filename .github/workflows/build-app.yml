name: Build Mower-Planner application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  APP_NAME: mower-planner
  REGISTRY_LOCALE: europe-west1-docker.pkg.dev
  REGISTRY_PATH: europe-west1-docker.pkg.dev/mower-planner/registry
  GKE_PROJECT: mower-planner
  GKE_ZONE: europe-west1-c
  GKE_CLUSTER: cluster-mower-planner
  DEPLOYMENT_NAME: mower-planner

jobs:
  build-app:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Use Node.js 16.x
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
        cache: "npm"
    - name: Build and test app
      uses: ./.github/actions/build-node

  build-image:
    runs-on: ubuntu-latest
    needs: build-app
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Get app version from package.json
      id: package-version
      uses: martinbeentjes/npm-get-version-action@master
    - name: 'Authenticate to Google Cloud'
      id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        workload_identity_provider: ${{ secrets.GCLOUD_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.GCLOUD_SVC_ACCOUNT }}
    - name: Build the Docker image and push to Artefact Registry
      env:
        APP_VERSION: ${{ steps.package-version.outputs.current-version }}
      run: |
        gcloud auth configure-docker $REGISTRY_LOCALE
        docker build . --tag $APP_NAME:$APP_VERSION
        docker tag $APP_NAME:$APP_VERSION $REGISTRY_PATH/$APP_NAME:$APP_VERSION-${GITHUB_SHA::7}
        docker tag $APP_NAME:$APP_VERSION $REGISTRY_PATH/$APP_NAME:beta
        docker push $REGISTRY_PATH/$APP_NAME:$APP_VERSION-${GITHUB_SHA::7}
        docker push $REGISTRY_PATH/$APP_NAME:beta

  deploy:
    runs-on: ubuntu-latest
    needs: build-image
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: 'Authenticate to Google Cloud'
      id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        workload_identity_provider: ${{ secrets.GCLOUD_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.GCLOUD_SVC_ACCOUNT }}
    - name: Deploy to GKE
      run: |
        gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $GKE_PROJECT
        helm upgrade $GKE_PROJECT ./helm --install \
          --namespace mower-planner --create-namespace \
          --set weatherapi.token=${{ secrets.WEATHER_API_TOKEN }},weatherapi.lat=${{ secrets.WEATHER_API_LAT }},weatherapi.lng=${{ secrets.WEATHER_API_LNG }} \
          --set mower.app.key=${{ secrets.MOW_APP_KEY }},mower.app.secret=${{ secrets.MOW_APP_SECRET }},mower.user=${{ secrets.MOW_USER }},mower.password=${{ secrets.MOW_PASS }} \
          --set mower.mowerid=${{ secrets.MOW_MOWER_ID }}
          --wait
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide
